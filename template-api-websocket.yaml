AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Websocket API for Vandal

Parameters:
  ENV:
    Type: String
    Default: stage
    AllowedValues:
      - stage
      - prod

  TABLEMESSAGES:
    Type: String

  TABLECONNECTIONS:
    Type: String

Globals:
  Function:
    Runtime: python3.9
    MemorySize: 128
    Timeout: 300
    CodeUri: api-websocket/

Resources:
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "OnConnectFunction"
      Handler: src.on_connect.handler
      Environment:
        Variables:
          DB_TABLE_CONNECTIONS: !Ref TABLECONNECTIONS
          DB_TABLE_MESSAGES: !Ref TABLEMESSAGES
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLECONNECTIONS
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLEMESSAGES
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*"
            - Effect: Allow
              Action:
                - "lambda:InvokeFunction"
              Resource:
                - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:BulkSendMessageFunction"

  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "OnDisconnectFunction"
      Handler: src.on_disconnect.handler
      Environment:
        Variables:
          DB_TABLE_CONNECTIONS: !Ref TABLECONNECTIONS
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLECONNECTIONS

  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com

  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "SendMessageFunction"
      Handler: src.send_message.handler
      Environment:
        Variables:
          DB_TABLE_CONNECTIONS: !Ref TABLECONNECTIONS
          DB_TABLE_MESSAGES: !Ref TABLEMESSAGES
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLECONNECTIONS
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLEMESSAGES
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*"

  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

  BulkSendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "BulkSendMessageFunction"
      Handler: src.send_bulk_message.handler
      Environment:
        Variables:
          DB_TABLE_CONNECTIONS: !Ref TABLECONNECTIONS
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TABLECONNECTIONS
        - Statement:
            - Effect: Allow
              Action:
                - "execute-api:ManageConnections"
              Resource:
                - !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*"

  BulkSendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - SimpleChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref BulkSendMessageFunction
      Principal: apigateway.amazonaws.com

  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TABLECONNECTIONS
      AttributeDefinitions:
        - AttributeName: connection_id
          AttributeType: S
        - AttributeName: channel_id
          AttributeType: S
      KeySchema:
        - AttributeName: connection_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      GlobalSecondaryIndexes:
        - IndexName: channel_id_index
          KeySchema:
            - AttributeName: channel_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1

  MessageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref TABLEMESSAGES
      AttributeDefinitions:
        - AttributeName: channel
          AttributeType: S
        - AttributeName: created_at
          AttributeType: S
      KeySchema:
        - AttributeName: channel
          KeyType: HASH
        - AttributeName: created_at
          KeyType: RANGE
      # BillingMode: PAY_PER_REQUEST
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  SimpleChatWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: SimpleChatWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: "$request.body.action"

  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref ConnectInteg

  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations

  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref DisconnectInteg

  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations

  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - "/"
        - - "integrations"
          - !Ref SendInteg

  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref SimpleChatWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations

  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - SendRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref SimpleChatWebSocket

  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: !Ref ENV
      Description: Stage
      DeploymentId: !Ref Deployment
      ApiId: !Ref SimpleChatWebSocket

Outputs:
  ConnectionsTableArn:
    Description: "Connections table ARN"
    Value: !GetAtt ConnectionsTable.Arn

  OnConnectFunctionArn:
    Description: "OnConnect function ARN"
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: "OnDisconnect function ARN"
    Value: !GetAtt OnDisconnectFunction.Arn

  SendMessageFunctionArn:
    Description: "SendMessage function ARN"
    Value: !GetAtt SendMessageFunction.Arn

  BulkSendMessageFunctionArn:
    Description: "BulkSendMessage function ARN"
    Value: !GetAtt BulkSendMessageFunction.Arn

  WebSocketURI:
    Description: "The WSS Protocol URI to connect to"
    Value:
      !Join [
        "",
        [
          "wss://",
          !Ref SimpleChatWebSocket,
          ".execute-api.",
          !Ref "AWS::Region",
          ".amazonaws.com/",
          !Ref ENV,
        ],
      ]
    Export:
      Name: WebSocketURI
